{
  "typescript.tsdk": "node_modules/typescript/lib",
  "yaml.schemas": {
    "http://moonrepo.dev/schemas/tasks.json": [
      "typescript.yml",
      "file:///Users/matt/dev/org-repo-moonrepo/.moon/tasks/typescript.yml"
    ],
    "file:///Users/matthew.penrice/.vscode/extensions/atlassian.atlascode-2.9.1/resources/schemas/pipelines-schema.json": [
      "bitbucket-pipelines.yml"
    ]
  },
  // ---------- moon eslint setup -- https://tinyurl.com/2oocjdoe ----
  // Automatically run all linting fixes on save as a concurrent code action,
  // and avoid formatting with ESLint. Use another formatter, like Prettier.
  "editor.codeActionsOnSave": [
    "source.fixAll.eslint"
  ],
  "eslint.format.enable": false,
  // If linting is *too slow* while typing, uncomment the following line to
  // only run the linter on save only.
  // "editor.run": "onSave",
  // Your package manager of choice.
  "eslint.packageManager": "yarn",
  // Use the newer and more performant `ESLint` class implementation.
  "eslint.useESLintClass": true,
  // List of directories that that linter should operate on.
  "eslint.workingDirectories": [
    {
      "pattern": "apps/*"
    },
    {
      "pattern": "packages/*"
    }
  ],
  // ---------- moon eslint setup EOF ----
  // ---------- moon prettier setup -- https://tinyurl.com/2qcfhs4s ----
  // Use Prettier as the default formatter for all file types. Types not
  // supported by Prettier can be overriden using bracket syntax, or ignore files.
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": false,
  "[shellscript]": {
    "editor.defaultFormatter": "mkhl.shfmt"
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  }
  // ---------- moon prettier setup EOF ----
}