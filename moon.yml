$schema: 'https://moonrepo.dev/schemas/project.json'
# docs - https://tinyurl.com/2qk3kdhv

# dependsOn: # using the node syncer in moon
#   - '@business-as-code/core'

toolchain:
  typescript:
    disabled: true # https://github.com/moonrepo/moon/issues/723


# moonrepo globs - https://tinyurl.com/2ftkxeso
fileGroups:
  # List of configuration files located within the project root.
  # configs:
  #   - '*.{js,json}'

  # List of non-test source files.
  # sources:
  #   - 'src/**/*'
  #   - 'types/**/*'

  # List of non-source test files.
  testFixtures:
    - 'packages/tests/pkg-tests-specs-fixtures/**/*.spec.*'

  # List of non-source test files.
  testNonFixtures:
    # - 'packages/tests/**/*.spec.*'
    # - '**/__tests__/**/*'
    - '**/*.spec.*'
    - '!packages/tests/pkg-tests-specs-fixtures/**/*.spec.*'

  # All static assets within the project.
  # This may include styles, images, videos, etc.
  # assets:
  #   - 'assets/**/*'
  #   - 'images/**/*'
  #   - 'static/**/*'
  #   - '**/*.{scss,css}'
  #   - '**/*.mdx'

# A task is an action that is ran within the context of a project, and wraps
# around an npm or system command. Tasks that are defined here and inherited by all projects
# within the workspace, but can be overridden per project.
#
# This setting requires a map, where the key is a unique name for the task,
# and the value is an object of task parameters.
tasks:

  changeset:
    command: 'changeset'
    # command: 'pnpm jest --passWithNoTests @in(0)'
    # inputs:
    #   # - 'packages/tests/pkg-tests-specs-fixtures/**/*.ts'
    #   # - '/tests/pkg-tests-specs-fixtures/**/*'
    #   # - './tests/pkg-tests-specs-fixtures/src/test-env.spec.ts' # NEVER USE RELATIVE STARTS - https://tinyurl.com/2ftkxeso
    #   # - 'tests/pkg-tests-specs-fixtures/**/*.spec.*'
    #   - '@globs(testFixtures)'
    platform: 'node'
    options:
      runFromWorkspaceRoot: true


  # lint:
  #   command: 'eslint'
  #   inputs:
  #     - '@globs(sources)'
  #     - '@globs(testFixtures)'
  #     - '@globs(testNonFixtures)'
  #   platform: 'node'
  testFixtures:
    # deps:
    #   - '~:publishDev'
    command: 'pnpm jest --passWithNoTests packages/tests/pkg-tests-specs-fixtures'
    # command: 'pnpm jest --passWithNoTests @in(0)'
    inputs:
      # - 'packages/tests/pkg-tests-specs-fixtures/**/*.ts'
      # - '/tests/pkg-tests-specs-fixtures/**/*'
      # - './tests/pkg-tests-specs-fixtures/src/test-env.spec.ts' # NEVER USE RELATIVE STARTS - https://tinyurl.com/2ftkxeso
      # - 'tests/pkg-tests-specs-fixtures/**/*.spec.*'
      - '@globs(testFixtures)'
    platform: 'node'
    options:
      runFromWorkspaceRoot: true
  test:
    deps:
      - '~:testFixtures'
    inputs:
      - '@globs(testNonFixtures)'
    command: 'pnpm jest --passWithNoTests --testPathIgnorePatterns=packages/tests/pkg-tests-specs-fixtures'
    platform: 'node'
    options:
      runFromWorkspaceRoot: true
  testWatch:
    deps:
      - '~:testFixtures'
    inputs:
      - '@globs(testNonFixtures)'
    command: 'pnpm jest --watch --passWithNoTests --testPathIgnorePatterns=packages/tests/pkg-tests-specs-fixtures'
    platform: 'node'
    local: true
    options:
      runFromWorkspaceRoot: true
      # persistent: true # disables moon caching etc
  buildClean:
    deps:
      # - ':lint' # run it in all
    # inputs:
    #   - '@globs(sources)'
    # command: 'tsc --build --clean'
    command: 'find . -type d -name dist | grep -v node_modules | xargs rm -rf; find . -type f -name tsconfig.tsbuildinfo | grep -v node_modules | xargs rm'
    platform: 'system'
    options:
      runFromWorkspaceRoot: true
    # local: true
    # options:
      # persistent: true # disables moon caching etc
  build:
    deps:
      # - '~:buildClean'
      # - ':lint' # run it in all
    # inputs:
    #   - '@globs(sources)'
    command: 'tsc --build'
    platform: 'node'
    options:
      runFromWorkspaceRoot: true
      cache: false # 'build' task is depended on by others and this busts their cache
      # affectedFiles: true
    # local: true
    # options:
      # persistent: true # disables moon caching etc
  buildWatch:
    deps:
      - '~:buildClean'
      # - ':lint' # run it in all
    # inputs:
    #   - '@globs(sources)'
    command: 'tsc --build --watch'
    platform: 'node'
    local: true
    options:
      runFromWorkspaceRoot: true
    # options:
      # persistent: true # disables moon caching etc
  # returnFail:
  #   command: "bash -c '$(exit 1)'"
  #   platform: 'system'
  doUnpublish:
    command: 'pnpm unpublish -u foo -r --no-git-checks --force --registry http://localhost:4873/ || true' # https://tinyurl.com/2okqdgo7
    platform: system
    options:
      runFromWorkspaceRoot: true
  # unpublishDev:
  #   deps:
  #     # - ~:returnFail
  #     - ~:build
  #     - '@business-as-code/tests-verdaccio:verdaccioEnsureRunning'
  #     - '@business-as-code/tests-verdaccio:verdaccioLogin'
  #     - ~:doUnpublish
  #   options:
  #     runDepsInParallel: false
  #     outputStyle: 'stream'
  #     # persistent: true # disables moon caching etc
  #     # outputStyle: 'buffer'

  #   # command: 'echo "hello"' # https://tinyurl.com/2okqdgo7
  #   # command: 'pnpm unpublish -u foo -r --no-git-checks --force --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
  #   # inputs:
  #   #   - ../
  #   # runFromWorkspaceRoot: true
  #   # platform: 'system'
  publishDev:
    deps:
      # - ~:returnFail
      - ~:build
      # - '@business-as-code/tests-verdaccio:verdaccioEnsureRunning'
      # - '@business-as-code/tests-verdaccio:verdaccioLogin'
      # - ~:doUnpublish
      # - ~:unpublishDev
    # local: true
    inputs:
      - "/packages/**/*"
      # - "!/packages/**/dist/**/*" // GH issue opened - https://tinyurl.com/28axoo53
      # - "!/packages/**/*" # snapshotting bumps the version/changelog
      # - "!/packages/**/package.json" # snapshotting bumps the version/changelog
      # - "!/packages/**/CHANGELOG.md" # snapshotting bumps the version/changelog
    outputs:
      - "/packages/**/dist/**/*"
      - "/packages/**/package.json"
      - "/packages/**/CHANGELOG.md"
    options:
      runDepsInParallel: false
      outputStyle: 'stream'
      runFromWorkspaceRoot: true

      # persistent: true
      # outputStyle: 'buffer'

    # command: 'echo "hello"' # https://tinyurl.com/2okqdgo7
    # command: "echo 'poo'" # https://tinyurl.com/2okqdgo7
    command: "pnpm dev:runCli release snapshot --message 'this is a snapshot release' --workspacePath $workspaceRoot --tag bollards --logLevel debug" # https://tinyurl.com/2okqdgo7
    # command: 'pnpm publish -u foo -r --no-git-checks --force --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
    # inputs:
    #   - ../
    # runFromWorkspaceRoot: true
    # platform: 'system'
  publishDevClean:
    deps:
      # - ~:returnFail
      - ~:buildClean
      - ~:build
      # - '@business-as-code/tests-verdaccio:verdaccioEnsureRunning'
      # - '@business-as-code/tests-verdaccio:verdaccioLogin'
      # - ~:doUnpublish
      # - ~:unpublishDev
    # local: true
    options:
      runDepsInParallel: false
      outputStyle: 'stream'
      runFromWorkspaceRoot: true
      # persistent: true
      # outputStyle: 'buffer'

    # command: 'echo "hello"' # https://tinyurl.com/2okqdgo7
    command: 'pnpm publish -r --no-git-checks --force --tag bollards --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
    # command: 'pnpm publish -u foo -r --no-git-checks --force --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
    # inputs:
    #   - ../
    # runFromWorkspaceRoot: true
    # platform: 'system'
  publish:
    deps:
      - ~:build
    command: 'pnpm publish -r --force' # https://tinyurl.com/2okqdgo7
    options:
      runFromWorkspaceRoot: true
    # platform: 'system'
  # sends artifacts to the local verdaccio



  # publishLocal:
  #   deps:
  #     # - ':lint' # run it in all
  #   # inputs:
  #   #   - '@globs(sources)'
  #   command: 'tsc --build'
  #   platform: 'node'
