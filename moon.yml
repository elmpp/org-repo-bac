$schema: 'https://moonrepo.dev/schemas/project.json'
# docs - https://tinyurl.com/2qk3kdhv

# dependsOn: # using the node syncer in moon
#   - '@business-as-code/core'

toolchain:
  typescript:
    disabled: true # https://github.com/moonrepo/moon/issues/723


# moonrepo globs - https://tinyurl.com/2ftkxeso
fileGroups:
  # List of configuration files located within the project root.
  # configs:
  #   - '*.{js,json}'

  # List of non-test source files.
  # sources:
  #   - 'src/**/*'
  #   - 'types/**/*'

  # List of non-source test files.
  testFixtures:
    - 'packages/tests/pkg-tests-specs-fixtures/**/*.spec.*'

  # List of non-source test files.
  testNonFixtures:
    # - 'packages/tests/**/*.spec.*'
    # - '**/__tests__/**/*'
    - '**/*.spec.*'
    - '!packages/tests/pkg-tests-specs-fixtures/**/*.spec.*'

  # All static assets within the project.
  # This may include styles, images, videos, etc.
  # assets:
  #   - 'assets/**/*'
  #   - 'images/**/*'
  #   - 'static/**/*'
  #   - '**/*.{scss,css}'
  #   - '**/*.mdx'

# A task is an action that is ran within the context of a project, and wraps
# around an npm or system command. Tasks that are defined here and inherited by all projects
# within the workspace, but can be overridden per project.
#
# This setting requires a map, where the key is a unique name for the task,
# and the value is an object of task parameters.
tasks:

  # ------- changesets publishing --------------
  changesetInit:
    command: 'changeset init' # changesets - https://tinyurl.com/2p65m9on
    # local: true
    options:
      runFromWorkspaceRoot: true
  changesetStatus:
    command: 'changeset status' # changesets - https://tinyurl.com/2lf7y8ty - return non-zero to prevent duplicate snapshots
    # local: true
    options:
      runFromWorkspaceRoot: true
  changesetAddSnapshotChangeset:
    # command: 'changeset add --empty' # we need to add a changeset when creating a snapshot in order to allow bumping of versions to proceed
    command: 'pnpm dev:runCli changesets snapshot --registry http://localhost:4873 --workspacePath $workspaceRoot' # we need to add a changeset when creating a snapshot in order to allow bumping of versions to proceed
    # local: true
    options:
      runFromWorkspaceRoot: true

  changesetSnapshotVersion:
    deps:
      - '~:changesetInit'
      - '~:changesetAddSnapshotChangeset'
      - '~:changesetStatus'
      # - '@business-as-code/plugin-dev-changesets:init'
      # - '@business-as-code/plugin-dev-changesets:addSnapshotChangeset'
      # - '@business-as-code/plugin-dev-changesets:status'
    command: 'changeset version --snapshot bollards' # changesets - https://tinyurl.com/2p65m9on
    options:
      runDepsInParallel: false
  changesetSnapshotPublish:
    deps:
      - ~:changesetSnapshotVersion
    inputs:
      - '@globs(publishable)'
    command: 'changeset publish --no-git-tag --tag bollards' # changesets - https://tinyurl.com/2p65m9on
    options:
      runFromWorkspaceRoot: true
  changesetSnapshotPublishLocal:
    deps:
      - root:build
      - ~:changesetSnapshotVersion
      - '~:verdaccioEnsureRunning' # https://github.com/moonrepo/moon/issues/859
      - '~:verdaccioLogin'
      # - '@business-as-code/tests-verdaccio:verdaccioEnsureRunning' # https://github.com/moonrepo/moon/issues/859
      # - '@business-as-code/tests-verdaccio:verdaccioLogin'
    env:
      npm_config_registry: http://localhost:4873
      npm_config_user: foo
    inputs:
      - '@globs(publishable)'
    # command: 'pnpm publish -r --no-git-checks --force --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
    command: 'changeset publish --no-git-tag -u foo --tag bollards' # changesets - https://tinyurl.com/2p65m9on
    options:
      runFromWorkspaceRoot: true
      runDepsInParallel: false
  publish:
    command: 'pnpm publish --'
    inputs:
      - '@globs(sources)'
      # - '@globs(testFixtures)'
      # - '@globs(testNonFixtures)'
    platform: 'node'

  # ------- verdaccio ----------
  verdaccioStopBackground:
    command: 'pnpm run --filter @business-as-code/tests-verdaccio verdaccio:stopBackground'
    local: true
    # options:
    #   persistent: true # disables moon caching etc
  verdaccioRunBackground:
    deps:
      - '~:verdaccioStopBackground'
    command: 'pnpm run --filter @business-as-code/tests-verdaccio verdaccio:runBackground'
    # command: 'pnpm jest --passWithNoTests @in(0)'
    # inputs:
    #   - 'tests/pkg-tests-specs-fixtures'
    #   # - '/tests/pkg-tests-specs-fixtures/**/*'
    #   # - './tests/pkg-tests-specs-fixtures/src/test-env.spec.ts' # NEVER USE RELATIVE STARTS - https://tinyurl.com/2ftkxeso
    #   # - 'tests/pkg-tests-specs-fixtures/**/*.spec.*'
    #   # - '@globs(testFixtures)'
    # outputs:
    #   - 'blah'
    local: true
    # options:
    #   persistent: true # disables moon caching etc
    # platform: 'node'
  verdaccioLogin:
    command: 'pnpm run --filter @business-as-code/tests-verdaccio verdaccio:login'
    # local: true
    options:
      outputStyle: 'buffer-only-failure'
      # persistent: true # disables moon caching etc
  verdaccioEnsureRunning:
    command: 'pnpm run --filter @business-as-code/tests-verdaccio verdaccio:ensureRunning'

    # local: true
    # options:
    #   persistent: true # disables moon caching etc


  # lint:
  #   command: 'eslint'
  #   inputs:
  #     - '@globs(sources)'
  #     - '@globs(testFixtures)'
  #     - '@globs(testNonFixtures)'
  #   platform: 'node'
  testFixtures:
    # deps:
    #   - '~:publishDev'
    command: 'pnpm jest --passWithNoTests packages/tests/pkg-tests-specs-fixtures'
    # command: 'pnpm jest --passWithNoTests @in(0)'
    inputs:
      # - 'packages/tests/pkg-tests-specs-fixtures/**/*.ts'
      # - '/tests/pkg-tests-specs-fixtures/**/*'
      # - './tests/pkg-tests-specs-fixtures/src/test-env.spec.ts' # NEVER USE RELATIVE STARTS - https://tinyurl.com/2ftkxeso
      # - 'tests/pkg-tests-specs-fixtures/**/*.spec.*'
      - '@globs(testFixtures)'
    platform: 'node'
    options:
      runFromWorkspaceRoot: true
  test:
    deps:
      - '~:testFixtures'
    inputs:
      - '@globs(testNonFixtures)'
    command: 'pnpm jest --passWithNoTests --testPathIgnorePatterns=packages/tests/pkg-tests-specs-fixtures'
    platform: 'node'
    options:
      runFromWorkspaceRoot: true
  testWatch:
    deps:
      - '~:testFixtures'
    inputs:
      - '@globs(testNonFixtures)'
    command: 'pnpm jest --watch --passWithNoTests --testPathIgnorePatterns=packages/tests/pkg-tests-specs-fixtures'
    platform: 'node'
    local: true
    options:
      runFromWorkspaceRoot: true
      # persistent: true # disables moon caching etc
  buildClean:
    deps:
      # - ':lint' # run it in all
    # inputs:
    #   - '@globs(sources)'
    command: 'tsc --build --clean'
    platform: 'node'
    options:
      runFromWorkspaceRoot: true
    # local: true
    # options:
      # persistent: true # disables moon caching etc
  build:
    deps:
      # - '~:buildClean'
      # - ':lint' # run it in all
    # inputs:
    #   - '@globs(sources)'
    command: 'tsc --build'
    platform: 'node'
    options:
      runFromWorkspaceRoot: true
    # local: true
    # options:
      # persistent: true # disables moon caching etc
  buildWatch:
    deps:
      - '~:buildClean'
      # - ':lint' # run it in all
    # inputs:
    #   - '@globs(sources)'
    command: 'tsc --build --watch'
    platform: 'node'
    local: true
    options:
      runFromWorkspaceRoot: true
    # options:
      # persistent: true # disables moon caching etc
  # returnFail:
  #   command: "bash -c '$(exit 1)'"
  #   platform: 'system'
  # doUnpublish:
  #   command: 'pnpm unpublish -u foo -r --no-git-checks --force --registry http://localhost:4873/ || true' # https://tinyurl.com/2okqdgo7
  #   platform: system
  #   options:
  #     runFromWorkspaceRoot: true
  # unpublishDev:
  #   deps:
  #     # - ~:returnFail
  #     - ~:build
  #     - '@business-as-code/tests-verdaccio:verdaccioEnsureRunning'
  #     - '@business-as-code/tests-verdaccio:verdaccioLogin'
  #     - ~:doUnpublish
  #   options:
  #     runDepsInParallel: false
  #     outputStyle: 'stream'
  #     # persistent: true # disables moon caching etc
  #     # outputStyle: 'buffer'

  #   # command: 'echo "hello"' # https://tinyurl.com/2okqdgo7
  #   # command: 'pnpm unpublish -u foo -r --no-git-checks --force --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
  #   # inputs:
  #   #   - ../
  #   # runFromWorkspaceRoot: true
  #   # platform: 'system'
  # publishDev:
  #   deps:
  #     # - ~:returnFail
  #     - ~:build
  #     # - '@business-as-code/tests-verdaccio:verdaccioEnsureRunning'
  #     # - '@business-as-code/tests-verdaccio:verdaccioLogin'
  #     - ~:doUnpublish
  #     # - ~:unpublishDev
  #   # local: true
  #   options:
  #     runDepsInParallel: false
  #     outputStyle: 'stream'
  #     runFromWorkspaceRoot: true
  #     # persistent: true
  #     # outputStyle: 'buffer'

  #   # command: 'echo "hello"' # https://tinyurl.com/2okqdgo7
  #   command: 'pnpm publish -r --no-git-checks --force --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
  #   # command: 'pnpm publish -u foo -r --no-git-checks --force --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
  #   # inputs:
  #   #   - ../
  #   # runFromWorkspaceRoot: true
  #   # platform: 'system'
  # publish:
  #   deps:
  #     - ~:build
  #   command: 'pnpm publish -r --force' # https://tinyurl.com/2okqdgo7
  #   options:
  #     runFromWorkspaceRoot: true
    # platform: 'system'
  # sends artifacts to the local verdaccio



  # publishLocal:
  #   deps:
  #     # - ':lint' # run it in all
  #   # inputs:
  #   #   - '@globs(sources)'
  #   command: 'tsc --build'
  #   platform: 'node'
