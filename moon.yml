$schema: 'https://moonrepo.dev/schemas/project.json'
# docs - https://tinyurl.com/2qk3kdhv

# dependsOn: # using the node syncer in moon
#   - '@business-as-code/core'

toolchain:
  typescript:
    disabled: true # https://github.com/moonrepo/moon/issues/723


# moonrepo globs - https://tinyurl.com/2ftkxeso
fileGroups:
  # List of configuration files located within the project root.
  # configs:
  #   - '*.{js,json}'

  # List of non-test source files.
  # sources:
  #   - 'src/**/*'
  #   - 'types/**/*'

  # List of non-source test files.
  testFixtures:
    - 'packages/tests/pkg-tests-specs-fixtures/**/*.spec.*'

  # List of non-source test files.
  testNonFixtures:
    # - 'packages/tests/**/*.spec.*'
    # - '**/__tests__/**/*'
    - '**/*.spec.*'
    - '!packages/tests/pkg-tests-specs-fixtures/**/*.spec.*'

  # All static assets within the project.
  # This may include styles, images, videos, etc.
  # assets:
  #   - 'assets/**/*'
  #   - 'images/**/*'
  #   - 'static/**/*'
  #   - '**/*.{scss,css}'
  #   - '**/*.mdx'

# A task is an action that is ran within the context of a project, and wraps
# around an npm or system command. Tasks that are defined here and inherited by all projects
# within the workspace, but can be overridden per project.
#
# This setting requires a map, where the key is a unique name for the task,
# and the value is an object of task parameters.
tasks:
  # lint:
  #   command: 'eslint'
  #   inputs:
  #     - '@globs(sources)'
  #     - '@globs(testFixtures)'
  #     - '@globs(testNonFixtures)'
  #   platform: 'node'
  testFixtures:
    # deps:
    #   - '~:publishDev'
    command: 'pnpm jest --passWithNoTests packages/tests/pkg-tests-specs-fixtures'
    # command: 'pnpm jest --passWithNoTests @in(0)'
    inputs:
      # - 'packages/tests/pkg-tests-specs-fixtures/**/*.ts'
      # - '/tests/pkg-tests-specs-fixtures/**/*'
      # - './tests/pkg-tests-specs-fixtures/src/test-env.spec.ts' # NEVER USE RELATIVE STARTS - https://tinyurl.com/2ftkxeso
      # - 'tests/pkg-tests-specs-fixtures/**/*.spec.*'
      - '@globs(testFixtures)'
    platform: 'node'
    runFromWorkspaceRoot: true
  test:
    deps:
      - '~:testFixtures'
    inputs:
      - '@globs(testNonFixtures)'
    command: 'pnpm jest --passWithNoTests --testPathIgnorePatterns=packages/tests/pkg-tests-specs-fixtures'
    platform: 'node'
    runFromWorkspaceRoot: true
    # local: true
  testWatch:
    deps:
      - '~:testFixtures'
    inputs:
      - '@globs(testNonFixtures)'
    command: 'pnpm jest --watch --passWithNoTests --testPathIgnorePatterns=packages/tests/pkg-tests-specs-fixtures'
    platform: 'node'
    runFromWorkspaceRoot: true
    local: true # disables moon caching etc
  build:
    deps:
      # - ':lint' # run it in all
    # inputs:
    #   - '@globs(sources)'
    command: 'tsc --build'
    platform: 'node'
    # local: true
  # returnFail:
  #   command: "bash -c '$(exit 1)'"
  #   platform: 'system'
  #   local: true
  publishDev:
    deps:
      # - ~:returnFail
      - ~:build
      - pkg-tests-verdaccio:verdaccioEnsureRunning
      - pkg-tests-verdaccio:verdaccioLogin
    options:
      runDepsInParallel: false
      outputStyle: 'stream'
      # outputStyle: 'buffer'

    # command: 'echo "hello"' # https://tinyurl.com/2okqdgo7
    command: 'pnpm publish -r --no-git-checks --force --registry http://localhost:4873/' # https://tinyurl.com/2okqdgo7
    # inputs:
    #   - ../
    # runFromWorkspaceRoot: true
    # platform: 'system'
    local: true
  publish:
    deps:
      - ~:build
    command: 'pnpm publish -r --force' # https://tinyurl.com/2okqdgo7
    # platform: 'system'
  # sends artifacts to the local verdaccio

  # publishLocal:
  #   deps:
  #     # - ':lint' # run it in all
  #   # inputs:
  #   #   - '@globs(sources)'
  #   command: 'tsc --build'
  #   platform: 'node'
  #   local: true
